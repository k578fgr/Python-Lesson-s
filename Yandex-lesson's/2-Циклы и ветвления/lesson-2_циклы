    Циклы
    Отступы в циклах
    Ветвления
    Множественные ветвления
    Логические выражения
    Составные логические выражения

    Возьмём, для примера, список всемирно известных бременских музыкантов. 

bremen_musicians = ['Кот', 'Пёс', 'Трубадур', 'Осёл', 'Петух'] 

На афише необходимо напечатать имена всех музыкантов, вот таким образом:

Кот
Пёс
Трубадур
Осёл
Петух 

Как это сделать в Python? Можно вручную прописать вывод каждого элемента:

print(bremen_musicians[0])
print(bremen_musicians[1])
... 

Придётся пять раз писать один и тот же код. А если в списке не скромная рок-группа, а симфонический оркестр и академический хор в придачу?
Задача — точно как с тарелками: нужно взять первый элемент списка bremen_musicians, напечатать через print(), потом взять следующий элемент... и продолжать работу до тех пор, пока не будет обработан последний элемент списка.
Для выполнения таких операций придумали циклы — программные конструкции, выполняющие определённые действия до тех пор, пока выполняется заданное условие.
Как это пишется
Объявление цикла
Чтобы программа поняла, что сейчас начнётся цикл — нужно сообщить ей об этом специальными словами: объявить цикл. В Python есть несколько разновидностей циклов; перебирать список проще всего циклом for … in …, с него и начнём.
Цикл в Python объявляется ключевыми словами for и in; после объявления ставится двоеточие. Ниже объявления пишут тело цикла — код, который описывает, что же нужно сделать с каждым элементом списка.

for переменная in список_элементов: # Вот оно, объявление цикла
        # Тут будет тело цикла. 

В условии цикла после for указывают имя переменной, в которую будут поочерёдно передаваться элементы из обрабатываемого списка, а после in ставится имя списка, который надо обработать. 
Продолжая метафору, «список элементов» — это груда немытых тарелок, а «переменная, объявленная в условии цикла» — это очередная взятая из груды тарелка.
Цикл автоматически прекратит работу, когда переберёт все элементы списка.
Имя переменной в цикле вы можете дать любое, но традиционно эти имена образуют от имени обрабатываемого списка, в единственном числе. Например, если список называется musicians, то переменную лучше назвать musician; если список называется pigs — переменную называют pig.
Тело цикла
На следующей строке после объявления цикла пишут его тело. Каждая строка тела цикла обязательно отбивается от начала строки четырьмя пробелами:

for переменная in список_элементов:
    # Тут тело цикла: код, который выполняется для каждого элемента
    # Здесь можно обработать переменную, объявленную в условии цикла,
    # например, напечатать её значение: print(переменная) 

Теперь можно написать цикл, который автоматически напечатает имена всех этих хиппи из команды «Бременские музыканты».

bremen_musicians = ['Кот', 'Пёс', 'Трубадур', 'Осёл', 'Петух']

for musician in bremen_musicians:
    # Каждый элемент списка bremen_musicians 
    # по очереди будет передан в переменную musician
    # и напечатан
    print(musician)

# Здесь может быть какой-то код, который выполнится
# только после того, как цикл закончит работу 
print(bremen_musicians[0])
print(bremen_musicians[1])
...

пример переменной
bremen_musicians = ['Кот', 'Пёс', 'Трубадур', 'Осёл', 'Петух']

for musician in bremen_musicians:
    # Каждый элемент списка bremen_musicians 
    # по очереди будет передан в переменную musician
    # и напечатан
    print(musician)

# Здесь может быть какой-то код, который выполнится
# только после того, как цикл закончит работу

Ответом будет
bremen_musicians = ['Кот', 'Пёс', 'Трубадур', 'Осёл', 'Петух']
# Код цикла
for musician in bremen_musicians:
    # Каждый элемент списка bremen_musicians 
    # по очереди будет передан в переменную musician
    # и напечатан
    print(musician)

# Код, который выполняется после цикла
print('Нам дворцов заманчивые своды не заменят никогда свободы!')

Результат

Кот
Пёс
Трубадур
Осёл
Петух
Нам дворцов заманчивые своды не заменят никогда свободы!


Задача 1

Ещё пример
months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']

for month in months:
    print(month)

Январь
Февраль
Март
Апрель
Май
Июнь
Июль
Август
Сентябрь
Октябрь
Ноябрь
Декабрь

Задача 3

обрати внимание на знаки после for и in

pigs = ['Ниф-Ниф', 'Наф-Наф', 'Нуф-Нуф']
print('Дорогие свиньи!')

for list in pigs:
    print (list)
print('приглашаю вас на ужин!')

print('Любящий вас Волк.')

kids = ['Витя', 'Маша', 'Марина']
candies = ['Батончик', 'Сникерс', 'Мишка Косолапый', 'Коровка']

Задача 5
for kid in kids:
  for candy in candies:
    print(kid, 'получает конфету', candy)

Витя получает конфету Батончик
Витя получает конфету Сникерс
Витя получает конфету Мишка Косолапый
Витя получает конфету Коровка
Маша получает конфету Батончик
Маша получает конфету Сникерс
Маша получает конфету Мишка Косолапый
Маша получает конфету Коровка
Марина получает конфету Батончик
Марина получает конфету Сникерс
Марина получает конфету Мишка Косолапый
Марина получает конфету Коровка

Следующая Задача

kids = ['Витя', 'Маша', 'Марина']

print ('У Литейного моста')
print('Я поймал в Неве кита,')
print('Спрятал за окошко.')
print('Съела его кошка,')
print('Помогали два кота…')
print('Вот и нет теперь кита!')
print('Ты не веришь другу?')
print('Выходи из круга!')
for kid in kids:
  print('Из круга выходит')
  print(kid)
    
print('Всё!')

Результат

У Литейного моста
Я поймал в Неве кита,
Спрятал за окошко.
Съела его кошка,
Помогали два кота…
Вот и нет теперь кита!
Ты не веришь другу?
Выходи из круга!
Из круга выходит
Витя
Из круга выходит
Маша
Из круга выходит
Марина
Всё!