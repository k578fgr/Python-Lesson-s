Выражения в f-строках
В f-строки можно подставлять не только переменные, но и результаты вычислений. Например, прямо в f-строке можно выполнять арифметические операции:

# Сложение чисел
one_hundred = 100
five_hundred = 500
print(f'{one_hundred} + {five_hundred} = {one_hundred + five_hundred}')

# Сложение строк
one_hundred = 'сто'
five_hundred = 'пятьсот'
print(f'{one_hundred} + {five_hundred} = {one_hundred + five_hundred}')
# Будет напечатано: 
# 100 + 500 = 600
# сто + пятьсот = стопятьсот 

В f-строке можно обратиться к элементам списка по индексу:

russian_alphabet = ['а','б','в','г','д','е','ё','ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х','ц','ч','ш','щ','ъ','ы','ь','э','ю','я']

print(f'«{russian_alphabet[-1]}» - последняя буква в алфавите.')

# Будет напечатано: 
# «я» - последняя буква в алфавите. 

Можно получить элемент словаря по ключу:

favorite_songs = {
    'Тополиный пух': 'Иванушки international',
    'Город золотой': 'Аквариум',
    'Звезда по имени Солнце': 'Кино'
}

song = 'Город золотой'

print(f'«{song}» - одна из самых известных пеcен группы «{favorite_songs[song]}».')

# Будет напечатано: 
# «Город золотой» - одна из самых известных пеcен группы «Аквариум». 

Хотя Python и позволяет вставлять сложные выражения внутрь f-строк, не злоупотребляйте этой возможностью. Иначе получится длинная перегруженная строка, в которой будет сложно разобраться. 
Вот два примера одного и того же кода:

favorite_songs = {
    'Тополиный пух': 'Иванушки international',
    'Город золотой': 'Аквариум',
    'Звезда по имени Солнце': 'Кино'
}

print(f'Из групп {favorite_songs["Тополиный пух"]}, {favorite_songs["Город золотой"]} и {favorite_songs["Звезда по имени Солнце"]} самая молодая — {favorite_songs["Тополиный пух"]}')

# А можно сделать код более аккуратным и читаемым
band_1 = favorite_songs['Тополиный пух']
band_2 = favorite_songs['Город золотой']
band_3 = favorite_songs['Звезда по имени Солнце']
print(f'Из групп {band_1}, {band_2} и {band_3} самая молодая команда — {band_1}') 

Второй вариант намного понятнее, хотя строк стало больше

Не стоит экономить на количестве строчек, принося в жертву читаемость кода: 
как ни странно это звучит, код чаще читают, чем пишут!

Задание 1

def print_time(hour, minute, second):
    print(f'На часах {hour}:{minute}:{second}')  # Аргумент должен содержать f-строку

print_time('19', '28', '06')

Результат

На часах 19:28:06

Задание 2 сжульничал

    # Напишите код функции calc_stat()
calc_stat = [189, 148, 210, 144, 174, 158, 163, 189, 227, 198]
N = len(calc_stat)
print(f'Вы прослушали {N} песен.')

Результат

Вы прослушали 10 песен.

Верный вариант

def calc_stat(listened):
    N = len(listened)
    return f'Вы прослушали {N} песен.'

listened = [189, 148, 210, 144, 174, 158, 163, 189, 227, 198]
print(calc_stat(listened))