russian_words = ['рука', 'нога', 'хвост', 'питон', 'бэкенд-разработчик']
english_words = ['hand', 'leg', 'tail', 'python', 'backend-developer']

В Python есть тип данных словарь, dict, он хранит информацию именно в такой структуре.

Словарь — это коллекция, набор элементов, разделённых запятой. Каждый элемент словаря состоит из двух частей, между этими частями ставится двоеточие: 
первая часть элемента называется ключ, вторая часть — значение.

english = {
    'рука': 'hand', # Первый элемент словаря (да, в каждом элементе две части!)
    'нога': 'leg',  # Второй элемент словаря
    'хвост': 'tail',  # Третий элемент
    'питон': 'python',  # Четвёртый элемент
    'бэкенд-разработчик': 'back-end developer'  # Пятый элемент
}



---

english = {
    'рука': 'hand',
    'нога': 'leg',
    'хвост': 'tail',
    'питон': 'python',
    'бэкенд-разработчик': 'back-end developer'
}

# Доступ по ключу: как по-английски рука?
print(english['бэкенд-разработчик'])

Результат

back-end developer

Уникальность ключей в словаре
Ключами словаря могут быть и числа, и строки, и даже булевы значения True или False. 
Но в словаре не может быть двух одинаковых ключей. 
Именно это свойство словаря позволяет безошибочно получать доступ к каждому значению: ключ — это уникальный адрес для доступа к значению.
Значением в словаре может быть вообще что угодно: 
числа, строки, списки и даже другие словари. Значения словаря не обязаны быть уникальными и могут повторяться.

dump = {
    1: 'единица',               # Ключ - число, значение - строка.
    'земляника': 'ягода',       # И ключ, и значение - строки.
    'помидор': 'ягода',         # Значение 'ягода' - не уникально. Так можно.
    False: 0,                   # Ключ - булево значение, значение - число.
    'лук': ['овощ', 'оружие'],  # Ключ - строка, значение - список.
                                # Ключ - строка, а значение - словарь. Так тоже можно!
    'англо-русский словарь': {'рука': 'hand', 
                              'нога': 'leg', 
                              'бэкенд-разработчик': 'back-end developer'
                               },    
}
---

print(dump['лук'])
# Будет напечатано ['овощ', 'оружие']

english = {
    'рука': 'hand',
	'нога': 'leg',
    'хвост': 'tail',
    'питон': 'python',
	'бэкенд-разработчик': 'back-end developer'
}

# Элементу с ключом 'рука' присвоим новое значение
english['рука'] = 'arm'

print(english['рука'])

Результат

arm
---

Значения всех ключей можно извлечь из словаря и собрать в одну коллекцию. 
Для этого у словаря есть метод values():

# Словарь, в котором хранятся начертания букв и их названия
old_letters = {
    'ять': 'Ѣ',
    'юс малый': 'Ѧ',
    'юс большой': 'Ѫ'}

print(old_letters.values())
# Будет напечатан список значений словаря
# dict_values(['Ѣ', 'Ѧ', 'Ѫ'])

---
favorite_songs = {
    'Тополиный пух': 'Иванушки international',
    'Город золотой': 'Аквариум',
    'Звезда по имени Солнце': 'Кино'
}

print(favorite_songs.keys()) 
# Будет напечатан список ключей словаря
# dict_keys(['Тополиный пух', 'Город золотой', 'Звезда по имени Солнце'])

---
english = {
    'рука': 'hand',
    'нога': 'leg',
    'хвост': 'tail',
    'питон': 'python',
    'бэкенд-разработчик': 'back-end developer'
}
# Собираем ключи словаря в коллекцию
# и преобразуем эту коллекцию в список
words_ru = list(english.keys())

# Собираем значения словаря в коллекцию
# и преобразуем эту коллекцию в список
words_en = list(english.values())

# Печатаем списки
print(words_ru)

print(words_en)

Результат

['рука', 'нога', 'хвост', 'питон', 'бэкенд-разработчик']
['hand', 'leg', 'tail', 'python', 'back-end developer']

---
Преобразование словаря в список или сет
Преобразовать в множество или в список можно не только коллекцию ключей или значений словаря, но и словарь целиком:

    функция set(имя_словаря) преобразует словарь в множество;
    функция list(имя_словаря) превратит словарь в список.

Задача 1

friends =  {
    'Серёга': 'Омск',
    'Соня': 'Москва',
    'Дима': 'Челябинск'
}
# Ваш код здесь
print(friends['Серёга'])

Результат

Омск


Задача 2
---
friends =  {
    'Серёга': 'Омск',
    'Соня': 'Москва',
    'Дима': 'Челябинск'
}

# Ваш код здесь
friends ['Серёга'] = 'Оренбург'
print('Серёга теперь живёт в славном городе ' + friends['Серёга'])

Результат

Серёга теперь живёт в славном городе Оренбург

---
Задача 3
friends =  {
    'Серёга': 'Оренбург',
    'Соня': 'Москва',
    'Миша': 'Москва',
    'Дима': 'Челябинск',
    'Алина': 'Красноярск',
    'Егор': 'Пермь',
    'Коля': 'Красноярск'
}

for cities in friends:
    cities = set(friends.values())

for i in cities:
    print(i)
# Здесь ваш код

Результат

Пермь
Красноярск
Москва
Челябинск
Оренбург