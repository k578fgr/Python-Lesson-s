Для работы со временем в Python импортируют библиотеку datetime. В ней есть не только отдельные функции, но и целый новый тип данных — datetime.
Название типа данных точно совпадает с библиотекой, и это не слишком удобно. Чтобы не путаться, библиотеку будем подключать под именем dt:

import datetime as dt 


пример
import datetime as dt 

# Взлёт: 1961 год, 12 апреля, 9 часов утра, 7 минут 
start_time = dt.datetime(1961, 4, 12, 9, 7, 0)

print('Уже', start_time, 'Поехали!') 

Тип данных datetime позволяет просто вычитать даты друг из друга, как обычные числа. Если решать такие задачи обычными математическими выражениями — код будет гораздо сложнее.
Вычислим время между стартом Гагарина и его приземлением:

import datetime as dt 

start_time = dt.datetime(1961, 4, 12, 9, 7, 0)


# Дата и время посадки: 1961 год, 12 апреля, 10 часов, 55 минут
landing_time = dt.datetime(1961, 4, 12, 10, 55, 0)

print(landing_time - start_time) 

Результат

1:48:00

При создании данных типа datetime можно не указывать время и обойтись только датой. В этом случае метка времени будет установлена автоматически, 
это будет полночь, начало заданной даты:


import datetime as dt 

start_day = dt.datetime(1961, 4, 12)

print(start_day) 

Результат

1961-04-12 00:00:00

Задание 1
import datetime as dt

# Дата выхода первой серии.
start_time = dt.datetime(2011, 4, 17) 
# Укажите дату выхода последней серии.
final_time = dt.datetime(2019, 4, 15) 

# Вычислите, сколько времени шёл сериал.
duration = final_time - start_time

print(duration)

Задание 2

# подключите библиотеку datetime под именем dt
import datetime as dt

start_moment = dt.datetime(2023, 5, 15)  # Напишите код здесь
current_moment = dt.datetime(2023, 7, 25)  # и здесь

total_time = current_moment - start_moment  # и здесь

print(total_time)

Результат

71 days, 0:00:00
